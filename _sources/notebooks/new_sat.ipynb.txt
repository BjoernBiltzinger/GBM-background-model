{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "d3c9b5a2",
   "metadata": {},
   "source": [
    "# Apply to other satellites"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ab79efa3",
   "metadata": {},
   "source": [
    "This code can also be used for experiments other than Fermi/GBM. All you need is a response generator, that can generate the response for any given position in the satellite frame and some information about the data and geometry (orbit, pointing,...). In this notebook we see how to use gbmbkgpy for a new mock satellite: All we have to do is write a new Data, Geometry and ResponseGenerator class that inherit from the base classes of gbmbkgpy. Let's start with a few imports first:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b0558426",
   "metadata": {},
   "source": [
    "## Imports"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "fe1caecc",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:10.658676Z",
     "iopub.status.busy": "2022-11-02T15:54:10.658127Z",
     "iopub.status.idle": "2022-11-02T15:54:13.293385Z",
     "shell.execute_reply": "2022-11-02T15:54:13.292612Z"
    }
   },
   "outputs": [],
   "source": [
    "from gbmbkgpy.data.data import Data\n",
    "from gbmbkgpy.geometry.geometry import Geometry\n",
    "from gbmbkgpy.response.response import ResponseGenerator\n",
    "\n",
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "from jupyterthemes import jtplot\n",
    "\n",
    "jtplot.style(context=\"notebook\", fscale=1, grid=False)\n",
    "\n",
    "from astromodels import Powerlaw, Exponential_cutoff, Constant, Band\n",
    "from astromodels.utils.configuration import astromodels_config\n",
    "astromodels_config.modeling.ignore_parameter_bounds = True\n",
    "\n",
    "from gbmbkgpy.modeling.new_astromodels import SBPL\n",
    "\n",
    "from gbmbkgpy.response.response_precalculation import ResponsePrecalculation\n",
    "from gbmbkgpy.response.src_response import EarthResponse, CGBResponse, GalacticCenterResponse, PointSourceResponse\n",
    "\n",
    "from gbmbkgpy.modeling.source import PhotonSourceFixed, SAASource, NormOnlySource\n",
    "from gbmbkgpy.modeling.functions import AstromodelFunctionVector\n",
    "\n",
    "from gbmbkgpy.modeling.model import ModelDet\n",
    "\n",
    "from gbmbkgpy.io.plotting.plot import plot_lightcurve"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fd5d55c9",
   "metadata": {},
   "source": [
    "## Define the Classes we need for our newly developed satellite"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1f2a64fa",
   "metadata": {
    "tags": []
   },
   "source": [
    "For simplicity assume we already know the time bins and data and do not have to read them from a file"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "1b6b311d",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:13.298257Z",
     "iopub.status.busy": "2022-11-02T15:54:13.297704Z",
     "iopub.status.idle": "2022-11-02T15:54:13.303230Z",
     "shell.execute_reply": "2022-11-02T15:54:13.302630Z"
    }
   },
   "outputs": [],
   "source": [
    "class NewSatData(Data):\n",
    "    \n",
    "    def __init__(self, name, time_bins, counts):\n",
    "        super().__init__(name, time_bins, counts)\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "23129627",
   "metadata": {},
   "source": [
    "The Geometry of our new satellite is very simple. Its coordinate system is always aligned with the icrs coordinate system and points with dec<-30 degree are occulted by the earth. Also we have found a new exciting tracer for CR here in our mock universe, which is just the square of a sinus."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "0ba3652f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:13.306219Z",
     "iopub.status.busy": "2022-11-02T15:54:13.305991Z",
     "iopub.status.idle": "2022-11-02T15:54:13.310873Z",
     "shell.execute_reply": "2022-11-02T15:54:13.310235Z"
    }
   },
   "outputs": [],
   "source": [
    "class NewSatGeometry(Geometry):\n",
    "    \n",
    "    def cr_tracer(self, time):\n",
    "        return np.sin(time/100.)**2\n",
    "    \n",
    "    def icrs_to_satellite(self, time, ra, dec):\n",
    "        return ra, dec\n",
    "    \n",
    "    def satellite_to_icrs(self, time, ra, dec):\n",
    "        return ra, dec\n",
    "    \n",
    "    def is_occulted(self, time, ra, dec):\n",
    "        try:\n",
    "            res = np.zeros(len(ra), dtype=bool)\n",
    "            res[dec<0] = True\n",
    "        \n",
    "            return res\n",
    "        except TypeError:\n",
    "            return dec<0\n",
    "    "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "09b12afb",
   "metadata": {},
   "source": [
    "The response of out newly developed satellite is also interesting, because it randomly change every time we start this analysis also the response scales linear with np.abs((zen/90))."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "49a47607",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:13.314339Z",
     "iopub.status.busy": "2022-11-02T15:54:13.313806Z",
     "iopub.status.idle": "2022-11-02T15:54:13.318294Z",
     "shell.execute_reply": "2022-11-02T15:54:13.317637Z"
    }
   },
   "outputs": [],
   "source": [
    "class NewSatResponseGenerator(ResponseGenerator):\n",
    "    \n",
    "    def __init__(self, geometry, Ebins_in_edge, data):\n",
    "        self._num_echan = data.num_echan\n",
    "        \n",
    "        self._mat = 1*np.random.rand(len(Ebins_in_edge)-1, self._num_echan)\n",
    "        \n",
    "        super().__init__(geometry, Ebins_in_edge, self._num_echan)\n",
    "        \n",
    "    def calc_response_az_zen(self, az, zen):\n",
    "        return np.abs((zen/90))*self._mat"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "009768db",
   "metadata": {},
   "source": [
    "## Run General Code\n",
    "\n",
    "The following code is the same like in the example for GBM data. Therefore we can skip directly to the result plots next."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "c13bb549",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:13.321588Z",
     "iopub.status.busy": "2022-11-02T15:54:13.321037Z",
     "iopub.status.idle": "2022-11-02T15:54:13.325439Z",
     "shell.execute_reply": "2022-11-02T15:54:13.324760Z"
    }
   },
   "outputs": [],
   "source": [
    "time_bin_edges = np.linspace(0,1000,101)\n",
    "time_bins = np.array([time_bin_edges[:-1], time_bin_edges[1:]]).T\n",
    "counts = np.random.randint(0,10, size=(100,5))\n",
    "data = NewSatData(\"dummy\", time_bins, counts)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "9fd552da",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:13.328656Z",
     "iopub.status.busy": "2022-11-02T15:54:13.328071Z",
     "iopub.status.idle": "2022-11-02T15:54:13.331259Z",
     "shell.execute_reply": "2022-11-02T15:54:13.330597Z"
    }
   },
   "outputs": [],
   "source": [
    "# init geometry object for Fermi/GBM at the given date\n",
    "geom = NewSatGeometry()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "fee9995f",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:13.334179Z",
     "iopub.status.busy": "2022-11-02T15:54:13.333827Z",
     "iopub.status.idle": "2022-11-02T15:54:13.337463Z",
     "shell.execute_reply": "2022-11-02T15:54:13.336833Z"
    }
   },
   "outputs": [],
   "source": [
    "# General response Generator\n",
    "drm_gen = NewSatResponseGenerator(geometry=geom, Ebins_in_edge=np.geomspace(10,2000, 101), data=data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "668701c0",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:13.340600Z",
     "iopub.status.busy": "2022-11-02T15:54:13.340017Z",
     "iopub.status.idle": "2022-11-02T15:54:13.959539Z",
     "shell.execute_reply": "2022-11-02T15:54:13.958597Z"
    }
   },
   "outputs": [
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "22f57269e0304f95b2af7e7db5ea7e75",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "VBox(children=(HTML(value='Calculating response calc 0 out of 3.This shows the progress of rank 0. All other s…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "602e8722e77941109003a8b7e62c955a",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "VBox(children=(HTML(value='Calculating response calc 1 out of 3.This shows the progress of rank 0. All other s…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.jupyter.widget-view+json": {
       "model_id": "87177abd206b4bb9afbc8dc4bc6e17ff",
       "version_major": 2,
       "version_minor": 0
      },
      "text/plain": [
       "VBox(children=(HTML(value='Calculating response calc 2 out of 3.This shows the progress of rank 0. All other s…"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Response precalculation for extended sources\n",
    "rsp_pre = ResponsePrecalculation(drm_gen, Ngrid=10000)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "22e5fd43",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:13.963537Z",
     "iopub.status.busy": "2022-11-02T15:54:13.963056Z",
     "iopub.status.idle": "2022-11-02T15:54:20.185938Z",
     "shell.execute_reply": "2022-11-02T15:54:20.185195Z"
    }
   },
   "outputs": [],
   "source": [
    "# Time where to calculate the effective responses - linear interpolation in between\n",
    "interp_time = np.linspace(data.time_bins[0,0], data.time_bins[-1,-1], 80)\n",
    "\n",
    "# Galactic Center\n",
    "gc_rsp = GalacticCenterResponse(geometry=geom, interp_times=interp_time, resp_prec=rsp_pre)\n",
    "\n",
    "# Earth Albedo\n",
    "earth_rsp = EarthResponse(geometry=geom, interp_times=interp_time, resp_prec=rsp_pre)\n",
    "\n",
    "# CGB\n",
    "cgb_rsp = CGBResponse(geometry=geom, interp_times=interp_time, resp_prec=rsp_pre)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "960dd740",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:20.190000Z",
     "iopub.status.busy": "2022-11-02T15:54:20.189511Z",
     "iopub.status.idle": "2022-11-02T15:54:20.194978Z",
     "shell.execute_reply": "2022-11-02T15:54:20.194331Z"
    }
   },
   "outputs": [],
   "source": [
    "# Response for Crab\n",
    "crab_rsp = PointSourceResponse(response_generator=drm_gen, interp_times=interp_time, ra=83.633, dec=22.015)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "6ecd85fa",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:20.198185Z",
     "iopub.status.busy": "2022-11-02T15:54:20.197579Z",
     "iopub.status.idle": "2022-11-02T15:54:20.530400Z",
     "shell.execute_reply": "2022-11-02T15:54:20.529696Z"
    }
   },
   "outputs": [],
   "source": [
    "# A point source\n",
    "\n",
    "# Define spectrum\n",
    "pl_crab = Powerlaw()\n",
    "pl_crab.K.value = 39.7\n",
    "pl_crab.index.value = -2.1\n",
    "\n",
    "# define source\n",
    "crab = PhotonSourceFixed(\"Crab\", pl_crab, crab_rsp)\n",
    "\n",
    "\n",
    "# extended sources\n",
    "\n",
    "#EARTH\n",
    "earth_spec = SBPL()\n",
    "earth_spec.K.value = 0.015\n",
    "earth_spec.alpha.value = -5\n",
    "earth_spec.beta.value = 1.72\n",
    "earth_spec.xb.value = 33.7\n",
    "\n",
    "earth = PhotonSourceFixed(\"Earth\", earth_spec, earth_rsp)\n",
    "\n",
    "#CGB\n",
    "cgb_spec = SBPL()\n",
    "cgb_spec.K.value = 0.11\n",
    "cgb_spec.alpha.value = 1.32\n",
    "cgb_spec.beta.value = 2.88\n",
    "cgb_spec.xb.value = 30.0\n",
    "cgb = PhotonSourceFixed(\"CGB\", cgb_spec, cgb_rsp)\n",
    "\n",
    "#GC\n",
    "pl1_gc = Powerlaw()\n",
    "pl1_gc.K.value = 0.08737610581967094\n",
    "pl1_gc.index.value = -1.45\n",
    "\n",
    "pl2_gc = Powerlaw()\n",
    "pl2_gc.K.value = 252.3829377920772\n",
    "pl2_gc.index.value = -2.9\n",
    "\n",
    "exp_gc = Exponential_cutoff()\n",
    "exp_gc.K.value = 0.1036025649336684\n",
    "exp_gc.xc.value = 8\n",
    "\n",
    "total = pl1_gc+pl2_gc+exp_gc\n",
    "\n",
    "gc = PhotonSourceFixed(\"GC\", total, gc_rsp)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "98668d26",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:20.534476Z",
     "iopub.status.busy": "2022-11-02T15:54:20.533832Z",
     "iopub.status.idle": "2022-11-02T15:54:20.539130Z",
     "shell.execute_reply": "2022-11-02T15:54:20.538477Z"
    }
   },
   "outputs": [],
   "source": [
    "exp_decay = Exponential_cutoff()\n",
    "exp_decay.K.value = 50\n",
    "exp_decay.xc.value = 5\n",
    "afv_saa = AstromodelFunctionVector(data.num_echan, base_function=exp_decay)\n",
    "\n",
    "exit_time_saa = 100\n",
    "\n",
    "saa = SAASource(\"SAA\", exit_time_saa, afv_saa)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "8d8c6c36",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:20.542373Z",
     "iopub.status.busy": "2022-11-02T15:54:20.541765Z",
     "iopub.status.idle": "2022-11-02T15:54:20.546313Z",
     "shell.execute_reply": "2022-11-02T15:54:20.545702Z"
    }
   },
   "outputs": [],
   "source": [
    "c = Constant()\n",
    "c.k.value = 1\n",
    "afv_cr = AstromodelFunctionVector(data.num_echan, base_function=c)\n",
    "\n",
    "cr = NormOnlySource(\"CR\", geom.cr_tracer, afv_cr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "cb058114",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:20.549239Z",
     "iopub.status.busy": "2022-11-02T15:54:20.548881Z",
     "iopub.status.idle": "2022-11-02T15:54:20.557024Z",
     "shell.execute_reply": "2022-11-02T15:54:20.556439Z"
    }
   },
   "outputs": [],
   "source": [
    "model = ModelDet(data)\n",
    "\n",
    "model.add_source(gc)\n",
    "model.add_source(earth)\n",
    "model.add_source(cgb)\n",
    "model.add_source(crab)\n",
    "\n",
    "model.add_source(saa)\n",
    "model.add_source(cr)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "764b8b86",
   "metadata": {},
   "source": [
    "## Plot"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "afdf0318",
   "metadata": {},
   "source": [
    "Sum of all model components"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "e01a31c6",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:20.560137Z",
     "iopub.status.busy": "2022-11-02T15:54:20.559915Z",
     "iopub.status.idle": "2022-11-02T15:54:20.709786Z",
     "shell.execute_reply": "2022-11-02T15:54:20.709079Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = plot_lightcurve(model, eff_echan=0, show_data=False)\n",
    "ax.legend();"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "917c0358",
   "metadata": {},
   "source": [
    "A few individual model components"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "0a0e0579",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:20.713583Z",
     "iopub.status.busy": "2022-11-02T15:54:20.713077Z",
     "iopub.status.idle": "2022-11-02T15:54:20.870597Z",
     "shell.execute_reply": "2022-11-02T15:54:20.869933Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "ax = plot_lightcurve(model, eff_echan=0, show_data=False, show_total_model=False, model_component_list=[\"CGB\", \"SAA\", \"CR\"], model_component_colors=[\"navy\", \"purple\", \"red\"])\n",
    "ax.legend();"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "83c921c3",
   "metadata": {},
   "source": [
    "Generate new data from our model"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "077b606a",
   "metadata": {
    "execution": {
     "iopub.execute_input": "2022-11-02T15:54:20.873917Z",
     "iopub.status.busy": "2022-11-02T15:54:20.873446Z",
     "iopub.status.idle": "2022-11-02T15:54:21.012524Z",
     "shell.execute_reply": "2022-11-02T15:54:21.011853Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0, 0.5, 'Counts')"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 800x700 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(data.mean_time, model.generate_counts()[:,0])\n",
    "plt.xlabel(\"Time [s]\")\n",
    "plt.ylabel(\"Counts\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.15"
  },
  "widgets": {
   "application/vnd.jupyter.widget-state+json": {
    "state": {
     "0023c06b590a4a828006e305dfcd5981": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "0b6ab539c05843cb81000bae22361414": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f78fe81248ff445d97e95fa949c186a5",
       "placeholder": "​",
       "style": "IPY_MODEL_92815350d9d047f3ab55805b8b22a6e9",
       "tabbable": null,
       "tooltip": null,
       "value": "4000 / 4000  in 0.2 s (0:00:00 remaining)"
      }
     },
     "1a9dd702cc1441c7b082f95a50e3aa68": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_6ad519b761a5471385ca3ee93b2866f0",
       "placeholder": "​",
       "style": "IPY_MODEL_d2b5247bec5e4f259cedc5e36169a50a",
       "tabbable": null,
       "tooltip": null,
       "value": "4000 / 4000  in 0.2 s (0:00:00 remaining)"
      }
     },
     "2088debe36e74f7881054de1fbd2b2d0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "20ee2fa3b2894be6843a02e9d4c52e00": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "22f57269e0304f95b2af7e7db5ea7e75": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_f18cbf04f3c740d78102cdb2c5bf7b66",
        "IPY_MODEL_0b6ab539c05843cb81000bae22361414",
        "IPY_MODEL_c58a85693da54bf08819dfbae22c839e"
       ],
       "layout": "IPY_MODEL_ac5f5eb154d149dcae8965de71d7aa04",
       "tabbable": null,
       "tooltip": null
      }
     },
     "2a93510d718444ee9ef3ba1e71bc59c1": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "2aa8fa41051045e796fbe3d4502c54ad": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_d44fe3666a7e4072a29751004ea2cd8f",
       "placeholder": "​",
       "style": "IPY_MODEL_fe188611a54f4460b978bd0946011346",
       "tabbable": null,
       "tooltip": null,
       "value": "Calculating response calc 1 out of 3.This shows the progress of rank 0. All other should be about the same. : "
      }
     },
     "2eaa0e5557a249e9aff16718a7274aed": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "472e20ed4f4e49cca8cb377aacf35976": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "594ea99a074046e384bf2cc2ae23b442": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "602e8722e77941109003a8b7e62c955a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_2aa8fa41051045e796fbe3d4502c54ad",
        "IPY_MODEL_1a9dd702cc1441c7b082f95a50e3aa68",
        "IPY_MODEL_cc3db6f9557348eb9e37a1a1af9016ef"
       ],
       "layout": "IPY_MODEL_7174b04fd8604d3bba9b4026bcd95398",
       "tabbable": null,
       "tooltip": null
      }
     },
     "621dd3cd366e4127b1f5e189eb2e53ca": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6ad519b761a5471385ca3ee93b2866f0": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "6f6fe2c6ba2e4e0e9e73029f731bede9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "7174b04fd8604d3bba9b4026bcd95398": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "859211aa7832416db1b8c0251db22747": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_f15e019908804709942113c6e1104275",
       "placeholder": "​",
       "style": "IPY_MODEL_6f6fe2c6ba2e4e0e9e73029f731bede9",
       "tabbable": null,
       "tooltip": null,
       "value": "Calculating response calc 2 out of 3.This shows the progress of rank 0. All other should be about the same. : "
      }
     },
     "87177abd206b4bb9afbc8dc4bc6e17ff": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "VBoxModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "VBoxModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "VBoxView",
       "box_style": "",
       "children": [
        "IPY_MODEL_859211aa7832416db1b8c0251db22747",
        "IPY_MODEL_ec3411a1ca3b4aa48c10536b4e779465",
        "IPY_MODEL_ca9de1ac52a44d8c8678745945866735"
       ],
       "layout": "IPY_MODEL_0023c06b590a4a828006e305dfcd5981",
       "tabbable": null,
       "tooltip": null
      }
     },
     "92815350d9d047f3ab55805b8b22a6e9": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "ac5f5eb154d149dcae8965de71d7aa04": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bc41b97b441848bfac9ca3b63ddf78a6": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "bd2499a98a1046cf9387d74f53ad60c9": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "c58a85693da54bf08819dfbae22c839e": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bc41b97b441848bfac9ca3b63ddf78a6",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_2eaa0e5557a249e9aff16718a7274aed",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "ca07b2596d76457984d4cffe59ff54d6": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "ProgressStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "ProgressStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "bar_color": null,
       "description_width": ""
      }
     },
     "ca9de1ac52a44d8c8678745945866735": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_2088debe36e74f7881054de1fbd2b2d0",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_20ee2fa3b2894be6843a02e9d4c52e00",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "cc3db6f9557348eb9e37a1a1af9016ef": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "FloatProgressModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "FloatProgressModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "ProgressView",
       "bar_style": "",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_621dd3cd366e4127b1f5e189eb2e53ca",
       "max": 100.0,
       "min": 0.0,
       "orientation": "horizontal",
       "style": "IPY_MODEL_ca07b2596d76457984d4cffe59ff54d6",
       "tabbable": null,
       "tooltip": null,
       "value": 100.0
      }
     },
     "d2b5247bec5e4f259cedc5e36169a50a": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     },
     "d44fe3666a7e4072a29751004ea2cd8f": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "ec3411a1ca3b4aa48c10536b4e779465": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_bd2499a98a1046cf9387d74f53ad60c9",
       "placeholder": "​",
       "style": "IPY_MODEL_2a93510d718444ee9ef3ba1e71bc59c1",
       "tabbable": null,
       "tooltip": null,
       "value": "2000 / 2000  in 0.2 s (0:00:00 remaining)"
      }
     },
     "f15e019908804709942113c6e1104275": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "f18cbf04f3c740d78102cdb2c5bf7b66": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLModel",
      "state": {
       "_dom_classes": [],
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/controls",
       "_view_module_version": "2.0.0",
       "_view_name": "HTMLView",
       "description": "",
       "description_allow_html": false,
       "layout": "IPY_MODEL_472e20ed4f4e49cca8cb377aacf35976",
       "placeholder": "​",
       "style": "IPY_MODEL_594ea99a074046e384bf2cc2ae23b442",
       "tabbable": null,
       "tooltip": null,
       "value": "Calculating response calc 0 out of 3.This shows the progress of rank 0. All other should be about the same. : "
      }
     },
     "f78fe81248ff445d97e95fa949c186a5": {
      "model_module": "@jupyter-widgets/base",
      "model_module_version": "2.0.0",
      "model_name": "LayoutModel",
      "state": {
       "_model_module": "@jupyter-widgets/base",
       "_model_module_version": "2.0.0",
       "_model_name": "LayoutModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "LayoutView",
       "align_content": null,
       "align_items": null,
       "align_self": null,
       "border_bottom": null,
       "border_left": null,
       "border_right": null,
       "border_top": null,
       "bottom": null,
       "display": null,
       "flex": null,
       "flex_flow": null,
       "grid_area": null,
       "grid_auto_columns": null,
       "grid_auto_flow": null,
       "grid_auto_rows": null,
       "grid_column": null,
       "grid_gap": null,
       "grid_row": null,
       "grid_template_areas": null,
       "grid_template_columns": null,
       "grid_template_rows": null,
       "height": null,
       "justify_content": null,
       "justify_items": null,
       "left": null,
       "margin": null,
       "max_height": null,
       "max_width": null,
       "min_height": null,
       "min_width": null,
       "object_fit": null,
       "object_position": null,
       "order": null,
       "overflow": null,
       "padding": null,
       "right": null,
       "top": null,
       "visibility": null,
       "width": null
      }
     },
     "fe188611a54f4460b978bd0946011346": {
      "model_module": "@jupyter-widgets/controls",
      "model_module_version": "2.0.0",
      "model_name": "HTMLStyleModel",
      "state": {
       "_model_module": "@jupyter-widgets/controls",
       "_model_module_version": "2.0.0",
       "_model_name": "HTMLStyleModel",
       "_view_count": null,
       "_view_module": "@jupyter-widgets/base",
       "_view_module_version": "2.0.0",
       "_view_name": "StyleView",
       "background": null,
       "description_width": "",
       "font_size": null,
       "text_color": null
      }
     }
    },
    "version_major": 2,
    "version_minor": 0
   }
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
