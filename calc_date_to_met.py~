#!/usr/bin python2.7

from datetime import datetime
import os
import matplotlib.pyplot as plt
import numpy as np
import math
import pyfits
from numpy import linalg as LA
import ephem
from astropy.time import Time

def calc_date_to_met(year, month = 01, day = 01, hour = 0., minute = 0., seconds = 0.):
    '''Converts from UTC to Fermi MET\n
    - 68.184 added to account for diff between TT and UTC and the 4 leapseconds\n
    leap seconds:
    2006 JAN  1 =JD 2453736.5  TAI-UTC=  33.0       S + (MJD - 41317.) X 0.0 S\n
    2009 JAN  1 =JD 2454832.5  TAI-UTC=  34.0       S + (MJD - 41317.) X 0.0 S\n
    2012 JUL  1 =JD 2456109.5  TAI-UTC=  35.0       S + (MJD - 41317.) X 0.0 S\n
    2015 JUL  1 =JD 2457204.5  TAI-UTC=  36.0       S + (MJD - 41317.) X 0.0 S'''
    mjdutc = ((met - 68.184) /86400.0)+51910+0.0007428703703
    mjdtt = ((met) /86400.0)+51910+0.00074287037037
    t1 = Time(mjdtt, scale='tt', format='mjd')
    t2 = Time(t1, scale='utc', format='isot')
    t3 = Time(t1, scale='utc', format='datetime')
    t4 = datetime.strptime(str(t3), "%Y-%m-%d %H:%M:%S.%f")
    poday = round((t4.hour * 3600 + t4.minute * 60 + t4.second + t4.microsecond*1e-6)/86400,3)
    t5 = str(t4.year)[2:]+ '%0.2d' %(t4.month) +str(t4.day)+str(poday)[2:]
    return met

time = calc_date_to_met(464918340.940070)
mjdutc = time[0]
t1 = time[1]
t2 = time[2]
t3 = time[3]
t4 = time[4]
t5 = time[5]

print 'mjdutc: ', mjdutc
print 't1: ', t1
print 't2: ', t2
print 't3: ', t3
print 't4: ', t4
print 't5: ', t5
